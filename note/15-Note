谁  什么时候(event time)  干了什么事情 


zs  time  what
ls  time  what

按照第几个字段去提取出时间戳字段即可

event time： 
	事件/数据真正产生的时间    一旦产生了，肯定就不变了
	与执行机器的当前系统时间无关，因为真正的时间已经在数据里面了
	与wm相关，结果具有确定性
	10:59:20 产生的数据    这条数据明确属于10-11点的窗口内

process time： 
	事件/数据处理的时间     
	与执行机器的当前系统时间有关
	优点：性能好，低延迟
	缺点：结果是不确定的    网络抖动、Flink运行效率

		10:59:20 产生的数据  10:59:59   10-11点的窗口内
						    11:00:10   11-12点的窗口内


我们该如何选择哪种时间语义呢？  ==> 这类问题 要从 具体的需求出发
	根据你的用户行为给你做了画像	
	1   你： 关注Flink
    2   你： 取关Flink
    3   你： 关注Flink
    5   你： 关注Flink
    4   你： 取关Flink

    微服务中的某条日志产生时间是2000   
    在Flink中运行的时间是     2042
    每五分钟统计微服务中报错的日志条数
    	process time： 40-45
    	event time：   00-05







1）是否keyBy
	Keyed Windows
	Non-Keyed Windows

2) 按照时间或者数量划分
	按时间划分：根据时间对数据流进行切片
		Time-based Window
		每隔30s一个窗口
	按照数量划分：跟时间没有关系，是按照元素个数对数据流进行切片
		Count-based Window
		3个元素构成一个窗口	

3) 按照Window Assigners划分
	tumbling windows：滚动窗口
		将数据依据固定的窗口长度对数据进行切分
		分发元素到指定大小的窗口
		窗口大小是固定的，不重叠

	sliding windows：滑动窗口
		slide大小小于窗口大小： 允许窗口重叠
		elements are assigned to multiple windows
		滚动窗口其实就是一个特殊的滑动窗口，滑动步长=窗口大小
		更多的是应用于趋势的分析
		每隔半"小时"统计前一个"小时"的数据，可以判断出一些走势

	session windows：会话/session窗口
		在一段时间内没有接收到数据，那么该窗口就关闭
		阈值：如何定义一段时间内
		当超出了不活跃的时间段，当前的会话窗口就会关闭，
		并且将接下来的数据分发到新的会话窗口上


	global windows： 全局窗口





































